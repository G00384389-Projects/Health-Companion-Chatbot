{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rossh\\\\ppitproject\\\\ppitproject\\\\client\\\\src\\\\DisplayTodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayTodoList({\n  todoList,\n  onDeleteTodoItem,\n  onAddTodoItem\n}) {\n  _s();\n  const [newItem, setNewItem] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (newItem.trim() !== '') {\n      onAddTodoItem(newItem);\n      setNewItem('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Mood Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"todo-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Create a new todo item\",\n          value: newItem,\n          onChange: e => setNewItem(e.target.value),\n          className: \"todo-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-todo-button\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list-container\",\n        children: todoList.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"todo-list\",\n          children: todoList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"todo-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => onDeleteTodoItem(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-tasks\",\n          children: \"No tasks found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayTodoList, \"lSlu409noVKESUh7d2/Yio/N4oM=\");\n_c = DisplayTodoList;\nexport default DisplayTodoList;\nvar _c;\n$RefreshReg$(_c, \"DisplayTodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DisplayTodoList","todoList","onDeleteTodoItem","onAddTodoItem","_s","newItem","setNewItem","handleSubmit","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","map","item","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rossh/ppitproject/ppitproject/client/src/DisplayTodoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./App.css\";\r\n\r\nfunction DisplayTodoList({ todoList, onDeleteTodoItem, onAddTodoItem }) {\r\n  const [newItem, setNewItem] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newItem.trim() !== '') {\r\n      onAddTodoItem(newItem);\r\n      setNewItem('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-app-container\">\r\n      <div className=\"todo-container\">\r\n        <h2>Daily Mood Description</h2>\r\n        <form onSubmit={handleSubmit} className=\"todo-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Create a new todo item\"\r\n            value={newItem}\r\n            onChange={(e) => setNewItem(e.target.value)}\r\n            className=\"todo-input\"\r\n          />\r\n          <button type=\"submit\" className=\"add-todo-button\">Add</button>\r\n        </form>\r\n        <div className=\"todo-list-container\">\r\n          {todoList.length > 0 ? (\r\n            <ul className=\"todo-list\">\r\n              {todoList.map((item, index) => (\r\n                <li key={index} className=\"todo-item\">\r\n                  <span>{item}</span>\r\n                  <button\r\n                    className=\"delete-button\"\r\n                    onClick={() => onDeleteTodoItem(index)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p className=\"no-tasks\">No tasks found</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayTodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}