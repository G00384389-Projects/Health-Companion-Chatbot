{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rossh\\\\ppitproject\\\\ppitproject\\\\client\\\\src\\\\Components\\\\clientList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InputTodoItem from \"../InputTodoItem\";\nimport DisplayTodoList from \"../DisplayTodoList\";\nimport OpenAIRequest from '../OpenAIRequest';\nimport configData from \"../config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClientList() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n\n  // Get all todo items when the web page is opened\n  useEffect(() => {\n    axios.get(`${configData.API_URI}/get_todo_items`).then(response => {\n      if (response.status === 200) {\n        setTodoList(response.data.todoItems);\n      }\n    });\n  }, []);\n\n  // Add a todo item to the list and to the database\n  const addTodoItem = itemContent => {\n    if (itemContent !== \"\") {\n      axios.post(`${configData.API_URI}/add_todo_item`, {\n        item_content: itemContent\n      }).then(response => {\n        if (response.status === 200) {\n          setTodoList([...todoList, {\n            \"id\": response.data.item_id,\n            \"content\": itemContent\n          }]);\n        }\n      });\n    }\n  };\n\n  // delete a todo item from the list and from the database\n  const deleteTodoItem = itemId => {\n    axios.post(`${configData.API_URI}/delete_todo_item`, {\n      item_id: itemId\n    }).then(response => {\n      if (response.status === 200) {\n        const newTodoList = todoList.filter(item => {\n          return item.id !== itemId;\n        });\n        setTodoList(newTodoList);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InputTodoItem, {\n      onAddTodoItem: addTodoItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Daily Mood Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayTodoList, {\n      todoList: todoList,\n      onDeleteTodoItem: deleteTodoItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(ClientList, \"hGGsNTuaOn7oyphipNa0xsYj1Yc=\");\n_c = ClientList;\nexport default ClientList;\nvar _c;\n$RefreshReg$(_c, \"ClientList\");","map":{"version":3,"names":["useState","useEffect","axios","InputTodoItem","DisplayTodoList","OpenAIRequest","configData","jsxDEV","_jsxDEV","ClientList","_s","todoList","setTodoList","get","API_URI","then","response","status","data","todoItems","addTodoItem","itemContent","post","item_content","item_id","deleteTodoItem","itemId","newTodoList","filter","item","id","className","children","onAddTodoItem","fileName","_jsxFileName","lineNumber","columnNumber","onDeleteTodoItem","_c","$RefreshReg$"],"sources":["C:/Users/rossh/ppitproject/ppitproject/client/src/Components/clientList.js"],"sourcesContent":["import {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\n\r\nimport InputTodoItem from \"../InputTodoItem\"\r\nimport DisplayTodoList from \"../DisplayTodoList\"\r\nimport OpenAIRequest from '../OpenAIRequest';\r\n\r\nimport configData from \"../config.json\"\r\n\r\nfunction ClientList(){\r\n    \r\nconst [todoList, setTodoList] = useState([]);\r\n\r\n    // Get all todo items when the web page is opened\r\n    useEffect(() => {\r\n        axios.get(`${configData.API_URI}/get_todo_items`)\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                setTodoList(response.data.todoItems);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    // Add a todo item to the list and to the database\r\n    const addTodoItem = (itemContent) => {\r\n        if (itemContent !== \"\") {\r\n            axios.post(`${configData.API_URI}/add_todo_item`, {item_content: itemContent})\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                        setTodoList([...todoList, {\"id\": response.data.item_id, \"content\": itemContent}]);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    // delete a todo item from the list and from the database\r\n    const deleteTodoItem = (itemId) => {\r\n        axios.post(`${configData.API_URI}/delete_todo_item`, {item_id: itemId})\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    const newTodoList = todoList.filter((item) => {\r\n                        return item.id !== itemId\r\n                    });\r\n\r\n                    setTodoList(newTodoList);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            \r\n            <InputTodoItem onAddTodoItem={addTodoItem} />\r\n\r\n            <h1>Daily Mood Description</h1>\r\n            <DisplayTodoList todoList={todoList} onDeleteTodoItem={deleteTodoItem} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClientList;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,aAAa,MAAM,kBAAkB;AAE5C,OAAOC,UAAU,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EAErB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACW,GAAG,CAAE,GAAEP,UAAU,CAACQ,OAAQ,iBAAgB,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC;MACxC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,WAAW,GAAIC,WAAW,IAAK;IACjC,IAAIA,WAAW,KAAK,EAAE,EAAE;MACpBnB,KAAK,CAACoB,IAAI,CAAE,GAAEhB,UAAU,CAACQ,OAAQ,gBAAe,EAAE;QAACS,YAAY,EAAEF;MAAW,CAAC,CAAC,CACzEN,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UACzBL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;YAAC,IAAI,EAAEK,QAAQ,CAACE,IAAI,CAACM,OAAO;YAAE,SAAS,EAAEH;UAAW,CAAC,CAAC,CAAC;QACrF;MACJ,CAAC,CAAC;IACV;EACJ,CAAC;;EAED;EACA,MAAMI,cAAc,GAAIC,MAAM,IAAK;IAC/BxB,KAAK,CAACoB,IAAI,CAAE,GAAEhB,UAAU,CAACQ,OAAQ,mBAAkB,EAAE;MAACU,OAAO,EAAEE;IAAM,CAAC,CAAC,CAClEX,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzB,MAAMU,WAAW,GAAGhB,QAAQ,CAACiB,MAAM,CAAEC,IAAI,IAAK;UAC1C,OAAOA,IAAI,CAACC,EAAE,KAAKJ,MAAM;QAC7B,CAAC,CAAC;QAEFd,WAAW,CAACe,WAAW,CAAC;MAC5B;IACJ,CAAC,CAAC;EACV,CAAC;EAED,oBACInB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAEhBxB,OAAA,CAACL,aAAa;MAAC8B,aAAa,EAAEb;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE7C7B,OAAA;MAAAwB,QAAA,EAAI;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7B,OAAA,CAACJ,eAAe;MAACO,QAAQ,EAAEA,QAAS;MAAC2B,gBAAgB,EAAEb;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEd;AAAC3B,EAAA,CAjDQD,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAmDnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}