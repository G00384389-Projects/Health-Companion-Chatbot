{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rossh\\\\ppitproject\\\\ppitproject\\\\client\\\\src\\\\Components\\\\newsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// The NewsList component fetches and displays a list of news articles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsList = () => {\n  _s();\n  // State variable for storing articles\n  const [articles, setArticles] = useState([]);\n  // State variable for storing any error during the fetch\n  const [error, setError] = useState('');\n\n  // useEffect to fetch news articles when the component mounts\n  useEffect(() => {\n    // Async function to fetch data\n    const fetchData = async () => {\n      // The base URL for the NewsAPI\n      const API_URL = 'https://newsapi.org/v2/everything';\n      // API key \n      const API_KEY = '13f23cf681c84f41848b57dda93a6694';\n      // Query parameters for the API call\n      const queryParams = {\n        q: 'Apple',\n        // Query term\n        from: '2024-12-24',\n        // Start date for the news articles\n        sortBy: 'popularity',\n        // Sorting parameter\n        apiKey: API_KEY // API key parameter\n      };\n      try {\n        // Perform the API request with axios\n        const response = await axios.get(API_URL, {\n          params: queryParams\n        });\n        console.log(response); // Log the response to the console for debugging\n        setArticles(response.data.articles); // Update the articles state with the fetched data\n      } catch (error) {\n        console.error('Error fetching news:', error);\n        setError('Failed to fetch news');\n      }\n    };\n    fetchData(); // Call the fetch data \n  }, []);\n\n  // Conditionally render an error message if there's an error\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the list of articles\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"World News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), articles.map((article, index) =>\n    /*#__PURE__*/\n    // Map over the articles array to render each article\n    _jsxDEV(\"div\", {\n      className: \"news-article\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: article.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: article.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: article.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), article.urlToImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: article.urlToImage,\n        alt: article.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: article.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Read more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsList, \"F2kgjczEat75o8W3xcdnwCDRhGw=\");\n_c = NewsList;\nexport default NewsList;\nvar _c;\n$RefreshReg$(_c, \"NewsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NewsList","_s","articles","setArticles","error","setError","fetchData","API_URL","API_KEY","queryParams","q","from","sortBy","apiKey","response","get","params","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","article","index","title","author","description","urlToImage","src","alt","href","url","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/rossh/ppitproject/ppitproject/client/src/Components/newsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// The NewsList component fetches and displays a list of news articles\r\nconst NewsList = () => {\r\n  // State variable for storing articles\r\n  const [articles, setArticles] = useState([]);\r\n  // State variable for storing any error during the fetch\r\n  const [error, setError] = useState('');\r\n\r\n  // useEffect to fetch news articles when the component mounts\r\n  useEffect(() => {\r\n    // Async function to fetch data\r\n    const fetchData = async () => {\r\n      // The base URL for the NewsAPI\r\n      const API_URL = 'https://newsapi.org/v2/everything';\r\n      // API key \r\n      const API_KEY = '13f23cf681c84f41848b57dda93a6694'; \r\n      // Query parameters for the API call\r\n      const queryParams = {\r\n        q: 'Apple', // Query term\r\n        from: '2024-12-24', // Start date for the news articles\r\n        sortBy: 'popularity', // Sorting parameter\r\n        apiKey: API_KEY // API key parameter\r\n      };\r\n\r\n      try {\r\n        // Perform the API request with axios\r\n        const response = await axios.get(API_URL, { params: queryParams });\r\n        console.log(response); // Log the response to the console for debugging\r\n        setArticles(response.data.articles); // Update the articles state with the fetched data\r\n      } catch (error) {\r\n        console.error('Error fetching news:', error); \r\n        setError('Failed to fetch news'); \r\n      }\r\n    };\r\n\r\n    fetchData(); // Call the fetch data \r\n  }, []); \r\n\r\n  // Conditionally render an error message if there's an error\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  // Render the list of articles\r\n  return (\r\n    <div className=\"news-container\">\r\n      <h1>World News</h1> \r\n      {articles.map((article, index) => (\r\n        // Map over the articles array to render each article\r\n        <div key={index} className=\"news-article\">\r\n          <h2>{article.title}</h2> \r\n          <p>{article.author}</p> \r\n          <p>{article.description}</p> \r\n          {/* Render the article image if the URL is available */}\r\n          {article.urlToImage && <img src={article.urlToImage} alt={article.title} />}\r\n          {/* link to read the full article */}\r\n          <p><a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a></p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}