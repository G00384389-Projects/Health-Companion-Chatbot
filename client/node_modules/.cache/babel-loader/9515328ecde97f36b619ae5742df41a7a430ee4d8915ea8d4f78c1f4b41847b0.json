{"ast":null,"code":"var _jsxFileName = \"C:\\\\ppitproject\\\\flaskOpenAi\\\\client\\\\src\\\\Components\\\\chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StreamComponent() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:5000/stream_response');\n    eventSource.onmessage = function (event) {\n      console.log('New message:', event.data);\n      setMessages(prevMessages => [...prevMessages, event.data]);\n    };\n    eventSource.onerror = function (error) {\n      console.error('EventSource failed:', error);\n      eventSource.close();\n    };\n    return () => {\n      eventSource.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Streamed Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(StreamComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = StreamComponent;\nexport default StreamComponent;\nvar _c;\n$RefreshReg$(_c, \"StreamComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StreamComponent","_s","messages","setMessages","eventSource","EventSource","onmessage","event","console","log","data","prevMessages","onerror","error","close","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","_c","$RefreshReg$"],"sources":["C:/ppitproject/flaskOpenAi/client/src/Components/chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction StreamComponent() {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const eventSource = new EventSource('http://localhost:5000/stream_response');\r\n\r\n    eventSource.onmessage = function(event) {\r\n      console.log('New message:', event.data);\r\n      setMessages(prevMessages => [...prevMessages, event.data]);\r\n    };\r\n\r\n    eventSource.onerror = function(error) {\r\n      console.error('EventSource failed:', error);\r\n      eventSource.close();\r\n    };\r\n\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Streamed Messages</h1>\r\n      <ul>\r\n        {messages.map((msg, index) => (\r\n          <li key={index}>{msg}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StreamComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,WAAW,GAAG,IAAIC,WAAW,CAAC,uCAAuC,CAAC;IAE5ED,WAAW,CAACE,SAAS,GAAG,UAASC,KAAK,EAAE;MACtCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,KAAK,CAACG,IAAI,CAAC;MACvCP,WAAW,CAACQ,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEJ,KAAK,CAACG,IAAI,CAAC,CAAC;IAC5D,CAAC;IAEDN,WAAW,CAACQ,OAAO,GAAG,UAASC,KAAK,EAAE;MACpCL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CT,WAAW,CAACU,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,OAAO,MAAM;MACXV,WAAW,CAACU,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA;MAAAgB,QAAA,EACGb,QAAQ,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBvB,OAAA;QAAAgB,QAAA,EAAiBM;MAAG,GAAXC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CA/BQD,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAiCxB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}